exit
@answer + @answer
current
'x' + 'y'
find_path(@answer)
@answer
@shortest_path
@pathes
next
@shortest_path.count
@shortest_path
@pathes
exit
exi
@pathes.first
pathes.first
@temp_arr.count
@temp_arr
@pathes[1]
@pathes[1].count
@pathes.first.index(@destination)
@pathes.first.count
@pathes.first
@pathes.count
@pathes
exit
@pathes.first.count
@pathes.first
@pathes.count
@pathes
exit
@temp_arr
@pathes[0]
@pathes.count
@pathes
exit
@temp_arr
@pathes[1]
@pathes[1].count
@pathes[2].count
@pathes[2]
@pathes[1].index(@destination)
@pathes[1].count
@pathes.first.count
@pathes.count
@pathes
exit
@pathes[2].count
@pathes[1].count
@pathes[1]
@pathes.first.index(@destination)
@pathes.first.count
@pathes.first
@pathes.count
@pathes
exit
@pathes.first
@shortest_path
@temp_arr.drop(9).index(@destination)
@temp_arr.drop(9)
@temp_arr.index(@destination)
@temp_arr.count
@temp_arr
@pathes.first
@pathes[1].count
@pathes[1]
@pathes.first.index(@destination)
@pathes.first.count
@pathes.first
@pathes.count
@pathes
exit
@pathes
exit
@pathes.first.first
@pathes[1]
@pathes[1].index(@destination)
@pathes.first.index(@destination)
@pathes.first.index(@destionation)
@pathes.first.count
@pathes.count
@pathes
exit
@temp_arr
exit
@pathes
@temp_arr.index(@destination)
@temp_arr
exit
@temp_arr.index(@destionation)
@pathes
@temp_arr.first
@temp_arr.count
@temp_arr
exit
@temp_arr.count
@temp_arr
exit
@temp_arr.take!(6)
@temp_arr.take(6).last == @destination
@temp_arr.take(6)
@temp_arr.index(@destination)
@temp_arr.count
@temp_arr
exit
@temp_arr.first
@temp_arr.count
@temp_arr
@shortest_path
exit
cut_pathes(@temp_arr).count
cut_pathes(@temp_arr)
@temp_arr.count
@temp_arr
@shortest_path
exit
@shortest_path
@answer
current
@current
next
@answer
@temp_arr[3]
@temp_arr[2]
@temp_arr.first
@temp_arr.count
@temp_arr
@temp_arr.index(@destination)
@destination
@shortest_path
@shortest_path.last == @destination 
@shortest_path.last == @destination ?
exit
@shortest_path[2]
@shortest_path[1]
@shortest_path.[1]
@shortest_path.first
@shortest_path.count
@shortest_path
@shortest.path
next
exit
@temp_arr.first
@temp_arr.count
exit
@temp_arr.first.first
@temp_arr.first.last
@temp_arr.first.count
@temp_arr.first.index(@destination)
@temp_arr.count
@temp_arr
exit
@temp_arr.drop(5).drop(7).index(@destination)
@temp_arr.drop(5).@temp_arr.drop(7).index(@destination)
@temp_arr.drop(5).index(@destination)
@temp_arr.take(5)
@destination
@temp_arr.take(4)
@temp_arr.index(@destination)
x
x[0] = []
x[0]
x = []
@temp_arr.count
@temp_arr
next
@temp_arr
exit
@temp_arr.count
@temp_arr
next
cell
current
next
cell
current
next
cell
current
next
cell
current
next
@temp_arr.count
@temp_arr
next
cell
current
next
@temp_arr.tail
@temp_arr.last
@temp_arr.first
@temp_arr.count
@temp_arr
cell
next
cell
current
next
current
next
current
next
cell
current
exit
@temp_arr.count
@temp_arr
cell
current
next
cell
current
next
current
cell
next
cell
current
next
cell
current
next
current
next
cell
current
next
cell
current
next
cell
current
next
cell
current
neighbours
exit
current
cell
exit
current
next
cell
current
next
current
cell
temp_arr
current
next
cell
current
self.find_path(current,neighbours)
self
cell
